- name: Backend Setup
  hosts: all
  become: yes
  tasks:
    - name: disable default nodejs version
      ansible.builtin.shell: dnf module disable nodejs -y

    - name: enable nodejs
      ansible.builtin.shell: dnf module enable nodejs -y


    - name: disable default nodejs version
      ansible.builtin.dnf:
         name: nodejs
         state: present







#  print_task_heading "disable default nodejs version"
#  dnf module disable nodejs -y &>>$LOG
#  check_status $?
#
#
#  print_task_heading "enable nodejs version:20"
#  dnf module enable nodejs:20 -y &>>$LOG
#  check_status $?
#
#  print_task_heading "install nodejs"
#  dnf install nodejs -y &>>$LOG
#  check_status $?
#
#  print_task_heading "adding application user"
#  id expense &>>$LOG
#  if [ $? -ne 0 ]; then
#  useradd expense &>>$LOG
#  fi
#  check_status $?
#
#  print_task_heading "copy backend service file"
#  cp backend.service /etc/systemd/system/backend.service &>>$LOG
#  check_status $?
#
#  Pre_req_app
#
#  print_task_heading "download nodjs dependencies"
#  cd /app &>>$LOG
#  npm install &>>$LOG
#  check_status $?
#
#  print_task_heading "reload the service"
#  systemctl daemon-reload &>>$LOG
#  check_status $?
#
#  print_task_heading "start backend service"
#  systemctl enable backend &>>$LOG
#  systemctl start backend &>>$LOG
#  check_status $?
#
#  print_task_heading "install mysql client"
#  dnf install mysql -y &>>$LOG
#  check_status $?
#
#  print_task_heading "load schema"
#  mysql -h mysql-dev.ramdevops78.online -uroot -p${mysql_root_password} < /app/schema/backend.sql  &>>$LOG
#  check_status $?
#
#  print_task_heading ""restart bckend""
#  systemctl restart backend &>>$LOG
#  check_status $?
#