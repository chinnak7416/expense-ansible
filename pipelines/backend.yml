format_version: 10
pipelines:
  expense-backend:
    group: defaultGroup
    label_template: "${env:APP_VERSION}"
    #    lock_behavior: none
    #    display_order: -1
    materials:
      git-f14e4aa:
        git: https://github.com/chinnak7416/expense-ansible.git
        shallow_clone: false
        auto_update: true
        branch: main
    secure_variables:
      vault_token: "AES:ygJYZCYQl2/+ct0sz1iW0w==:xIVBUeUEwQmqvq2zQNIsdFXXCB6tGiE4J8bJdp7mjms="
    environment_variables:
      APP_VERSION: ""
    stages:
      - DEV:
          fetch_materials: true
          environment_variables:
            env: dev
          #         keep_artifacts: false
          #         clean_workspace: false
          approval:
            type: manual
          #           allow_only_on_success: false
          jobs:
            ansible-playbook:
              #             timeout: 0
              tasks:
                - exec:
                    arguments:
                      - ansible.sh
                      - backend
                    command: bash # bash ansible.sh backend
                    run_if: passed

      - QA:
          fetch_materials: true
          environment_variables:
            env: qa
          #         keep_artifacts: false
          #         clean_workspace: false
          approval:
            type: manual
          #           allow_only_on_success: false
          jobs:
            ansible-playbook:
              #             timeout: 0
              tasks:
                - exec:
                    arguments:
                      - ansible.sh
                      - backend
                    command: bash # bash ansible.sh backend
                    run_if: passed

      - STAGE:
          fetch_materials: true
          environment_variables:
            env: stage
          #         keep_artifacts: false
          #         clean_workspace: false
          approval:
            type: manual
          #           allow_only_on_success: false
          jobs:
            ansible-playbook:
              #             timeout: 0
              tasks:
                - exec:
                    arguments:
                      - ansible.sh
                      - backend
                    command: bash # bash ansible.sh backend
                    run_if: passed

      - PROD:
          fetch_materials: true
          environment_variables:
            env: prod
          #         keep_artifacts: false
          #         clean_workspace: false
          approval:
            type: manual
          #           allow_only_on_success: false
          jobs:
            ansible-playbook:
              #             timeout: 0
              tasks:
                - exec:
                    arguments:
                      - ansible.sh
                      - backend
                    command: bash # bash ansible.sh backend
                    run_if: passed