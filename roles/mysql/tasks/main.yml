- name: Install mysql server
  ansible.builtin.dnf:
    name: mysql-server
    state: installed

- name: start mysql service
  ansible.builtin.systemd_service:
    name: mysqld
    state: started
    enabled: yes

#- name: install Python Mysql client
#  ansible.builtin.shell: dnf install mysql -y
- name: install Python Mysql client
  ansible.builtin.pip:
    name:
      - PyMySQL
      - cryptography
    executable: pip3.9

- name: load
  ansible.builtin.shell: echo 'show databases' | mysql -h mysql-dev.ramdevops78.online -uroot -pExpenseApp@1
  register: mysql_connection_OUTPUT
  ignore_errors: yes
- name: OUTPUT
  ansible.builtin.debug:
    msg: "{{ mysql_connection_OUTPUT }}"

#- name: Setup mysql password
#  ansible.builtin.shell: mysql_secure_installation --set-root-pass ExpenseApp@1
#  when: mysql_connection_OUTPUT.rc == 0
#- name: load schema
#  community.mysql.mysql_db:
#    state: import
#    name: all
#    target: /app/schema/backend.sql
#    login_user: root
#    login_password: ExpenseApp@1
#    login_host: mysql-dev.ramdevops78.online

- name: Setup mysql password
  community.mysql.mysql_db:
    check_implicit_admin: true
    login_user: root
    login_password: ExpenseApp@1
    login_host: mysql-dev.ramdevops78.online
    name: mysqld
    state: present


# mysql_secure_installation --set-root-pass ExpenseApp@1

#  mysql -h mysql-dev.ramdevops78.online -uroot -pExpenseApp@1

