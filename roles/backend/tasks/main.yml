- name: disable default nodejs version
  ansible.builtin.shell: dnf module disable nodejs -y

- name: enable nodejs version:20
  ansible.builtin.shell: dnf module disable nodejs -y

- name: install nodejs
  ansible.builtin.dnf:
    name: nodejs
    state: latest

- name: adding application user
  ansible.builtin.user:
    name: expense

- name: Import app pre requisites
  ansible.builtin.import_role:
      name: common
      tasks_from: app-pre-req

- name: download nodejs dependencies
  community.general.npm:
    path: /app
    state: latest

- name: copy backend service file
  ansible.builtin.template:
    src: backend.service
    dest: /etc/systemd/system/backend.service

- name: install Python Mysql client
  ansible.builtin.shell: dnf install mysql -y

- name: Install MySQL Client
  ansible.builtin.dnf:
    name: mysql
    state: installed

- name: load schema
  ansible.builtin.shell: mysql -h mysql-dev.ramdevops78.online -uroot -pExpenseApp@1 < /app/schema/backend.sql
    #      ansible.builtin.pip:
    #        name:
    #          - PyMySQL
    #          - cryptography
  #executable: pip3.9

#    - name: load schema
#      community.mysql.mysql_db:
#        state: import
#        name: all
#        target: /app/schema/backend.sql
#        login_user: root
#        login_password: ExpenseApp@1
#        login_host: mysql-dev.ramdevops78.online

- name: start backend service
  ansible.builtin.systemd_service:
    name: backend
    state: restarted
    daemon_reload: true
    enabled: true