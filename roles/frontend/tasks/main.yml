#- name: Install the latest version of Nginx
#  ansible.builtin.dnf:
#    name: nginx
#    state: latest
#
#- name: Copy expense nginx configuration
#  ansible.builtin.template:
#    src: expense.conf
#    dest: /etc/nginx/default.d/expense.conf
#
#- name: Import app pre requisites
#  ansible.builtin.import_role:
#    name: common
#    tasks_from: app-pre-req

#- name: clean the old content
#  ansible.builtin.file:
#    path: /usr/share/nginx/html
#    state: absent
#
#- name: create app directory
#  ansible.builtin.file:
#    path: /usr/share/nginx/html
#    state: directory
#
#- name:  download & extract  app content
#  ansible.builtin.unarchive:
#    src: https://expense-artifacts.s3.amazonaws.com/expense-frontend-v2.zip
#    dest: /usr/share/nginx/html
#    remote_src: yes
#
#- name:  Start Nginx
#  ansible.builtin.systemd_service:
#    state: restarted
#    name: nginx
#    enabled: yes
#
#- name: Import NewRelic Nginx setup
#  ansible.builtin.import_role:
#    name: newrelic
#    tasks_from: nginx

- name: Install Caddy
  ansible.builtin.get_url:
    url: https://caddyserver.com/api/download?os=linux&arch=arm64
    dest: /bin/caddy
    mode: '0755'

- name: User Add caddy
  ansible.builtin.user:
    name: "{{ app_user }}"

- name: Import app pre requisites
  ansible.builtin.import_role:
    name: common
    tasks_from: app-pre-req

- name: Copy Caddy Configuration file
  ansible.builtin.template:
    src: caddyfile
    dest: "{{ app_loc }}/caddyfile"

- name: Copy Caddy Service file
  ansible.builtin.template:
    src: caddy.service
    dest: /etc/systemd/system/caddy.service

- name: Start Caddy Service
  ansible.builtin.systemd_service:
    name: caddy
    state: restarted
    enabled: yes
    daemon-reload: yes
